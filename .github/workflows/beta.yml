---
name: Beta

on:
  workflow_dispatch:
  push:
    branches:
      - beta/*
      - dev/*
  pull_request:
    types: [assigned, unassigned]
    paths:
      - "cmd/**"
      - "internal/**"
      - "discovery/**"
      - "Makefile"
      - "go.mod"
      - "go.sum"

jobs:
  test:
    runs-on: ubuntu-22.04
    container: cherts/pgscv-test-runner:1.0.10
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Prepare test environment
        run: prepare-test-environment.sh
      - name: Run test
        run: make test

  build:
    runs-on: ubuntu-22.04
    needs: test
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set environment
        id: version
        run: |
          echo VERSION="1.0" >>$GITHUB_OUTPUT
          echo GIT_BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >>$GITHUB_OUTPUT
          echo GIT_COMMIT="$(git rev-parse --short "${GITHUB_SHA}")" >>$GITHUB_OUTPUT
          echo GIT_DATE="$(git log -1 --format=%cd --date=format:"%Y%m%d")" >>$GITHUB_OUTPUT
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=v${{ steps.version.outputs.VERSION }}-${{ steps.version.outputs.GIT_BRANCH }}-${{ steps.version.outputs.GIT_COMMIT }}-${{ steps.version.outputs.GIT_DATE }}-beta
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.beta
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        id: attest
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
      - name: Cleanup registry
        uses: actions/delete-package-versions@v5
        with:
          owner: ${{ github.repository_owner }}
          package-name: 'pgscv'
          package-type: container
          min-versions-to-keep: 5
#          delete-only-untagged-versions: 'true'
